// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OccurenceTrigger.Data;

#nullable disable

namespace OccurenceTrigger.Migrations
{
    [DbContext(typeof(OccurrenceTriggerContext))]
    [Migration("20240227181820_AddingIndicatorHistoric")]
    partial class AddingIndicatorHistoric
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("OccurenceTrigger.Models.Indicator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CalcType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductionUnitId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("System")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Indicators");
                });

            modelBuilder.Entity("OccurenceTrigger.Models.IndicatorHistoric", b =>
                {
                    b.Property<int>("IndicatorId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<bool>("AdherenceShift")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Reability")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Value")
                        .HasColumnType("REAL");

                    b.Property<string>("Workshift")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IndicatorId", "Date");

                    b.ToTable("IndicatorHistorics");
                });

            modelBuilder.Entity("OccurenceTrigger.Models.Occurrence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("TEXT");

                    b.Property<int>("IndicatorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Responsable")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Occurrences");
                });

            modelBuilder.Entity("OccurenceTrigger.Models.TriggerConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AdherenceShift")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IndicatorId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("LastValue")
                        .HasColumnType("REAL");

                    b.Property<double>("MaxValue")
                        .HasColumnType("REAL");

                    b.Property<double>("MinValue")
                        .HasColumnType("REAL");

                    b.Property<double>("ReferencePercentage")
                        .HasColumnType("REAL");

                    b.Property<int>("TypeTrigger")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("TriggerConfigurations");
                });
#pragma warning restore 612, 618
        }
    }
}
